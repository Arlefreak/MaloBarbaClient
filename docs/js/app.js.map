{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/app.js","src/js/collections/Products.js","src/js/common.js","src/js/models/Product.js","src/js/views/List.js","src/js/views/Product.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\nvar $         = window.$;\nvar ListView  = require('./views/List');\n\n$(function() {\n    new ListView();\n});\n","\"use strict\";\n\nvar $        = window.$;\nvar Backbone = window.Backbone;\nBackbone.$   = $;\nvar Common   = require('../common');\nvar Product  = require('../models/Product');\n\nvar Products = Backbone.Collection.extend({\n    model: Product,\n    url: Common.URL + 'product?status=IN',\n\n    // inStock: function(){\n    //     return this.filter(function(product) {\n    //         return product.get('inventory');\n    //     });\n    // },\n\n    comparator: function(product) {\n        return product.get('order');\n    }\n});\n\nmodule.exports = new Products();\n","\"use strict\";\n\nvar Common = {\n    ENTER_KEY: 13,\n    FILTER: \"\",\n    URL: 'http://api.malobarba.com/api/'\n};\n\nmodule.exports = Common;\n","\"use strict\";\n\nvar $ = window.$;\nvar Backbone = window.Backbone;\nvar Common = require('../common.js');\nBackbone.$ = $;\n\nmodule.exports = Backbone.Model.extend({\n    urlRoot: Common.URL + 'product',\n    defaults: {\n        pk: -1,\n        sku: '',\n        name: '',\n        image: '',\n        description: '',\n        price: 0,\n        discount: 0,\n        inventory: 0,\n        status: '',\n        tags: [],\n        category: '',\n        date: '',\n        updated: '',\n        order: 0,\n        url: ''\n    },\n\n    url: function() {\n        return this.urlRoot + '/' + this.pk;\n    },\n});\n","\"use strict\";\n\nvar $ = window.$;\nvar Backbone = window.Backbone;\nBackbone.$ = $;\n\nvar Common = require('../common');\nvar Products = require('../collections/Products');\nvar ProductView = require('./Product.js');\n\nmodule.exports = Backbone.View.extend({\n\n    // Instead of generating a new element, bind to the existing skeleton of\n    // the App already present in the HTML.\n    el: '#storeApp',\n\n    // New\n    // Delegated events for creating new items, and clearing completed ones.\n    events: {\n        // 'keypress #new-todo': 'createOnEnter',\n        // 'click #clear-completed': 'clearCompleted',\n        // 'click #toggle-all': 'toggleAllComplete'\n    },\n\n    // At initialization we bind to the relevant events on the `Todos`\n    // collection, when items are added or changed. Kick things off by\n    // loading any preexisting todos that might be saved in *localStorage*.\n    initialize: function() {\n        // this.allCheckbox = this.$('#toggle-all')[0];\n        // this.$input = this.$('#new-todo');\n        this.$footer = this.$('#footer');\n        this.$main = this.$('#storeApp');\n\n        this.listenTo(Products, 'add', this.addOne);\n        this.listenTo(Products, 'reset', this.addAll);\n\n        // New\n        this.listenTo(Products, 'filter', this.filterAll);\n        this.listenTo(Products, 'all', this.render);\n        Products.fetch({reset:true});\n    },\n\n    // New\n    // Re-rendering the App just means refreshing the statistics -- the rest\n    // of the app doesn't change.\n        render: function() {\n\n        if (Products.length) {\n            this.$main.show();\n            this.$footer.show();\n        } else {\n            this.$main.hide();\n            this.$footer.hide();\n        }\n    },\n\n    // Add a single todo item to the list by creating a view for it, and\n    // appending its element to the `<ul>`.\n    addOne: function(product) {\n        var view = new ProductView({\n            model: product\n        });\n        $('#productList').append(view.render().el);\n    },\n\n    // Add all items in the **Todos** collection at once.\n    addAll: function() {\n        this.$('#productList').html('');\n        Products.each(this.addOne, this);\n    },\n\n    // New\n    filterOne: function(product) {\n        // product.trigger('visible');\n    },\n\n    // New\n    filterAll: function() {\n        Products.each(this.filterOne, this);\n    },\n\n\n    // New\n    // Generate the attributes for a new Todo item.\n    newAttributes: function() {\n        return {\n            name: this.$input.val().trim(),\n        };\n    },\n\n    // New\n    // If you hit return in the main input field, create new Todo model,\n    // persisting it to localStorage.\n    createOnEnter: function(event) {\n        if (event.which !== Common.ENTER_KEY || !this.$input.val().trim()) {\n            return;\n        }\n        Products.create(this.newAttributes());\n        this.$input.val('');\n    }\n});\n","\"use strict\";\n\nvar $        = window.$;\nvar Backbone = window.Backbone;\nvar _        = window._;\nBackbone.$   = $;\n\nvar Common   = require('../common.js');\n\nmodule.exports = Backbone.View.extend({\n\n    //... is a list tag.\n    tagName: 'li',\n\n    // Cache the template function for a single item.\n    template: _.template($('#product-template').html()),\n\n    // The DOM events specific to an item.\n    events: {\n        // 'click .toggle': 'togglecompleted', // NEW\n        // 'dblclick label': 'edit',\n        // 'click .destroy': 'clear', // NEW\n        // 'keypress .edit': 'updateOnEnter',\n        // 'blur .edit': 'close'\n    },\n\n    // The TodoView listens for changes to its model, re-rendering. Since there's\n    // a one-to-one correspondence between a **Todo** and a **TodoView** in this\n    // app, we set a direct reference on the model for convenience.\n    initialize: function() {\n        this.listenTo(this.model, 'change', this.render);\n        this.listenTo(this.model, 'destroy', this.remove); // NEW\n        // this.listenTo(this.model, 'visible', this.toggleVisible); // NEW\n    },\n\n    // Re-render the titles of the todo item.\n    render: function() {\n        this.$el.html(this.template(this.model.attributes));\n        this.$input = this.$('.edit');\n        return this;\n    },\n\n    // NEW - Toggles visibility of item\n    toggleVisible: function() {\n        this.$el.toggleClass('hidden', this.isHidden());\n    },\n\n    // NEW - Determines if item should be hidden\n    isHidden: function() {\n        var stock = this.model.get('stock');\n        return ( // hidden cases only\n            (!stock && Common.FILTER === 'stock') || (stock && Common.FILTER === 'stock')\n        );\n    },\n\n    // NEW - Remove the item, destroy the model from *localStorage* and delete its view.\n    clear: function() {\n        this.model.destroy();\n    }\n});\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}